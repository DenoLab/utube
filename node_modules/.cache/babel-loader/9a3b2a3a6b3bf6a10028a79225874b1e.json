{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dio\\\\Downloads\\\\cmder\\\\test\\\\utube\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = styled.div`\n    padding: 20px;\n    input {\n        width: 100%;\n        height: 25px;\n    }\n`;\n_c = Header;\nconst VideoPlayed = styled.div`\n    width: 50%;\n    height: 400px;\n`;\n_c2 = VideoPlayed;\nconst SearchResult = styled.div`\n// display: flex;\n// justify-content: center;\n// flex-direction: column;\n// align-items: center;\n`;\n_c3 = SearchResult;\nconst Items = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 50px auto;\n    button {\n        display: flex;\n        align-items: center;\n        background: white;\n        border: solid 1px white;\n        padding: 10px;\n        :hover {\n            color: green;\n            border: solid 1px green;\n        }\n    }\n    \n    p {\n        padding-left: 20px;\n    }\n`;\n_c4 = Items;\n\nfunction App() {\n  _s();\n\n  const [searchKey, setSearchKey] = useState('');\n  const [result, setResult] = useState(''); // const [result, setResult] = useState({items:[]});\n\n  const [loading, setLoading] = useState(false);\n  const [video, setVideo] = useState('https://www.youtube.com/embed/1So7VBehCQg');\n  const [input, setInput] = useState(\"Search here\");\n  const watchVideo = \"https://www.youtube.com/watch?v=\";\n  const ApiKey = \"&key=AIzaSyALkh3jg2EAfRx8hRGehrCZSyYmbO9zlpo\";\n  const UtubeLink = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchKey}&maxResults=25${ApiKey}`;\n\n  const getInput = e => {\n    const input = e.target.value;\n    const newInput = input === \"\" ? \"Search\" : input;\n    setInput(newInput);\n  };\n\n  const letSearch = e => {\n    if (e.key === \"Enter\" || e.code === \"NumpadEnter\") {\n      setSearchKey(input);\n    }\n  };\n\n  const playVideo = e => {\n    const linkVideo = e.target.value;\n    setVideo(linkVideo);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(UtubeLink).then(res => res.json()).then(posts => {\n      setResult(posts);\n      setLoading(false);\n      setVideo(\"https://www.youtube.com/embed/\" + posts.items[0].id.videoId);\n    });\n  }, [UtubeLink]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find something in youtube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"themeSize\",\n        placeholder: input,\n        onChange: getInput,\n        onKeyPress: letSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), searchKey && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Results for keyword \\\"\", searchKey, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(VideoPlayed, {\n      children: result && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"player\",\n        type: \"text/html\",\n        width: \"100%\",\n        height: \"100%\",\n        src: video,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }, this), result && /*#__PURE__*/_jsxDEV(Items, {\n        children: result.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"https://www.youtube.com/embed/\" + item.id.videoId,\n          type: \"button\",\n          onClick: playVideo,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.snippet.thumbnails.default.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, item.id.videoId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ITVMYALrc4WcQMoP3WpV/DY7d8M=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"VideoPlayed\");\n$RefreshReg$(_c3, \"SearchResult\");\n$RefreshReg$(_c4, \"Items\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Users/Dio/Downloads/cmder/test/utube/src/App.js"],"names":["React","useState","useEffect","styled","Header","div","VideoPlayed","SearchResult","Items","App","searchKey","setSearchKey","result","setResult","loading","setLoading","video","setVideo","input","setInput","watchVideo","ApiKey","UtubeLink","getInput","e","target","value","newInput","letSearch","key","code","playVideo","linkVideo","fetch","then","res","json","posts","items","id","videoId","map","item","snippet","thumbnails","default","url","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n    padding: 20px;\n    input {\n        width: 100%;\n        height: 25px;\n    }\n`;\n\nconst VideoPlayed = styled.div`\n    width: 50%;\n    height: 400px;\n`;\nconst SearchResult = styled.div`\n// display: flex;\n// justify-content: center;\n// flex-direction: column;\n// align-items: center;\n`;\nconst Items = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 50px auto;\n    button {\n        display: flex;\n        align-items: center;\n        background: white;\n        border: solid 1px white;\n        padding: 10px;\n        :hover {\n            color: green;\n            border: solid 1px green;\n        }\n    }\n    \n    p {\n        padding-left: 20px;\n    }\n`;\n\nfunction App() {\n    const [searchKey, setSearchKey]=useState('');\n    const [result, setResult] = useState('');\n    // const [result, setResult] = useState({items:[]});\n    const [loading, setLoading] = useState(false);\n    const [video,setVideo] = useState('https://www.youtube.com/embed/1So7VBehCQg');\n    const [input, setInput] = useState(\"Search here\");\n    const watchVideo = \"https://www.youtube.com/watch?v=\";\n\n    const ApiKey =\"&key=AIzaSyALkh3jg2EAfRx8hRGehrCZSyYmbO9zlpo\";\n    const UtubeLink = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchKey}&maxResults=25${ApiKey}`\n    \n    const getInput = (e) => {\n        const input = e.target.value;\n        const newInput = input === \"\" ? \"Search\" : input;\n        setInput(newInput);\n    }\n\n    const letSearch = (e) => {\n        if (e.key === \"Enter\" || e.code === \"NumpadEnter\") {\n            setSearchKey(input);\n        }\n    }\n   \n    const playVideo = (e) => {\n        const linkVideo = e.target.value;\n        setVideo(linkVideo);\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(UtubeLink)\n        .then(res => res.json())\n        .then(posts => {\n            setResult(posts);\n            setLoading(false);\n            setVideo(\"https://www.youtube.com/embed/\"+posts.items[0].id.videoId);\n        })\n    },[UtubeLink]);\n\n    return (\n        <div className=\"App\">\n            <Header>\n                <h1>Find something in youtube</h1>\n                <input type=\"text\" name=\"themeSize\" placeholder={input} onChange={getInput} onKeyPress={letSearch}></input>\n            </Header>\n            {searchKey && (<h1>Results for keyword \"{searchKey}\"</h1>)}\n            {/* {result && <iframe className=\"player\" type=\"text/html\" width=\"800px\" height=\"600px\" src={\"https://www.youtube.com/embed/\"+result.items[0].id.videoId} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen/>} */}\n            <VideoPlayed>\n                {result && <iframe className=\"player\" type=\"text/html\" width=\"100%\" height=\"100%\" src={video} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen/>}\n            </VideoPlayed>\n            \n            <SearchResult>\n            {loading && (<div>Loading...</div>)}\n            {result && (\n            <Items>\n                {result.items.map(item => (\n                    <button value={\"https://www.youtube.com/embed/\" + item.id.videoId} type=\"button\" onClick={playVideo} key={item.id.videoId} >\n                        <img src={item.snippet.thumbnails.default.url}/>\n                        <p>{item.snippet.title}</p>\n                    </button>\n                ))}\n            </Items>\n            )}\n            </SearchResult>\n        </div>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}