{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dio\\\\Downloads\\\\cmder\\\\test\\\\utube\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport ReactPlayer from 'react-player';\nimport parse from \"html-react-parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResult = styled.div`\n// display: flex;\n// justify-content: center;\n// flex-direction: column;\n// align-items: center;\n`;\n_c = SearchResult;\nconst Items = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 50%;\n// align-items: center;\nmargin-left: 50px auto;\n    button {\n        display: flex;\n        align-items: center;\n        background: white;\n        border: solid 1px white;\n        padding: 10px;\n        :hover {\n        color: green;\n        border: solid 1px green;\n}\n    }\n    p {\n        padding-left: 20px;\n    }\n// :hover {\n//     color: green;\n//     border: solid 1px green;\n// }\n`;\n_c2 = Items;\n\nfunction App() {\n  _s();\n\n  const [searchKey, setSearchKey] = useState('');\n  const [result, setResult] = useState(''); // const [result, setResult] = useState({items:[]});\n\n  const [loading, setLoading] = useState(false);\n  const [video, setVideo] = useState('https://www.youtube.com/embed/1So7VBehCQg');\n  const [input, setInput] = useState(\"Search\");\n  const watchVideo = \"https://www.youtube.com/watch?v=\";\n  const ApiKey = \"&key=AIzaSyA-O0PnAoDduuz490vJ286BDvDLKt08fHE\";\n  const UtubeLink = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchKey}&maxResults=25${ApiKey}`;\n\n  const getInput = e => {\n    const input = e.target.value;\n    const newInput = input === \"\" ? \"Search\" : input;\n    setInput(newInput);\n  };\n\n  const letSearch = e => {\n    if (e.key === \"Enter\" || e.code === \"NumpadEnter\") {\n      console.log(UtubeLink);\n      setSearchKey(input);\n    }\n  };\n\n  const playVideo = e => {\n    const linkVideo = e.target.value;\n    setVideo(linkVideo);\n    console.log(video);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(UtubeLink).then(res => res.json()).then(posts => {\n      setResult(posts);\n      setLoading(false);\n      setVideo(\"https://www.youtube.com/embed/\" + posts.items[0].id.videoId); // console.log(video);\n    });\n  }, [searchKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"T\\xECm ki\\u1EBFm video tr\\xEAn youtube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"themeSize\",\n      placeholder: input,\n      onChange: getInput,\n      onKeyPress: letSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), searchKey && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"K\\u1EBFt qu\\u1EA3 cho t\\u1EEB kh\\xF3a \\\"\", searchKey]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }, this), result && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"player\",\n      type: \"text/html\",\n      width: \"800px\",\n      height: \"600px\",\n      src: video,\n      frameborder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowfullscreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }, this), result && /*#__PURE__*/_jsxDEV(Items, {\n        children: result.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"https://www.youtube.com/embed/\" + item.id.videoId,\n          type: \"button\",\n          onClick: playVideo,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.snippet.thumbnails.default.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, item.id.videoId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"BEvx2cSpmkMD9Fn0hj50mS4olKQ=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SearchResult\");\n$RefreshReg$(_c2, \"Items\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Dio/Downloads/cmder/test/utube/src/App.js"],"names":["React","useState","useEffect","styled","ReactPlayer","parse","SearchResult","div","Items","App","searchKey","setSearchKey","result","setResult","loading","setLoading","video","setVideo","input","setInput","watchVideo","ApiKey","UtubeLink","getInput","e","target","value","newInput","letSearch","key","code","console","log","playVideo","linkVideo","fetch","then","res","json","posts","items","id","videoId","map","item","snippet","thumbnails","default","url","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport ReactPlayer from 'react-player'\nimport parse from \"html-react-parser\";\n\n\nconst SearchResult = styled.div`\n// display: flex;\n// justify-content: center;\n// flex-direction: column;\n// align-items: center;\n`;\nconst Items = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 50%;\n// align-items: center;\nmargin-left: 50px auto;\n    button {\n        display: flex;\n        align-items: center;\n        background: white;\n        border: solid 1px white;\n        padding: 10px;\n        :hover {\n        color: green;\n        border: solid 1px green;\n}\n    }\n    p {\n        padding-left: 20px;\n    }\n// :hover {\n//     color: green;\n//     border: solid 1px green;\n// }\n`;\n\nfunction App() {\n    const [searchKey, setSearchKey]=useState('');\n    const [result, setResult] = useState('');\n    // const [result, setResult] = useState({items:[]});\n    const [loading, setLoading] = useState(false);\n    const [video,setVideo] = useState('https://www.youtube.com/embed/1So7VBehCQg');\n    const [input, setInput] = useState(\"Search\");\n    const watchVideo = \"https://www.youtube.com/watch?v=\";\n\n    const ApiKey =\"&key=AIzaSyA-O0PnAoDduuz490vJ286BDvDLKt08fHE\";\n    const UtubeLink = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchKey}&maxResults=25${ApiKey}`\n    \n    const getInput = (e) => {\n        const input = e.target.value;\n        const newInput = input === \"\" ? \"Search\" : input;\n        setInput(newInput);\n    }\n\n    const letSearch = (e) => {\n        if (e.key === \"Enter\" || e.code === \"NumpadEnter\") {\n            console.log(UtubeLink); \n            setSearchKey(input);\n        }\n    }\n   \n\n\n    const playVideo = (e) => {\n        const linkVideo = e.target.value;\n        setVideo(linkVideo);\n        console.log(video);\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(UtubeLink)\n        .then(res => res.json())\n        .then(posts => {\n            setResult(posts);\n            setLoading(false);\n            setVideo(\"https://www.youtube.com/embed/\"+posts.items[0].id.videoId);\n            // console.log(video);\n        })\n    },[searchKey]);\n    \n\n    return (\n        <div className=\"App\">\n            <h1>Tìm kiếm video trên youtube</h1>\n            <input type=\"text\" name=\"themeSize\" placeholder={input} onChange={getInput} onKeyPress={letSearch}></input>\n            {/* <h1>Kết quả cho từ khóa \"{searchKey}\"</h1> */}\n            {searchKey && (<h1>Kết quả cho từ khóa \"{searchKey}</h1>)}\n            {/* {result && <iframe className=\"player\" type=\"text/html\" width=\"800px\" height=\"600px\" src={\"https://www.youtube.com/embed/\"+result.items[0].id.videoId} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen/>} */}\n            {result && <iframe className=\"player\" type=\"text/html\" width=\"800px\" height=\"600px\" src={video} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen/>}\n            \n            <SearchResult>\n\n            {loading && (<div>Loading...</div>)}\n            {result && (\n            <Items>\n                {result.items.map(item => (\n                    <button value={\"https://www.youtube.com/embed/\" + item.id.videoId} type=\"button\" onClick={playVideo} key={item.id.videoId} >\n                        <img src={item.snippet.thumbnails.default.url}/>\n                        <p>{item.snippet.title}</p>\n                    </button>\n                ))}\n            </Items>\n            )}\n            </SearchResult>\n        </div>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}